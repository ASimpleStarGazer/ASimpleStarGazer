
# ASimpleStarGazer 产品需求文档（PRD｜含分享社区）

## 1. 背景与目标

### 背景

随着天文爱好者数量的增加，用户希望能有一款本地/云端都能使用的多语言观星助手。现有的观星应用大多功能单一或依赖联网，缺乏本地 RAG（检索增强生成）与多语言支持。

### 产品目标

* 提供跨平台（Web、移动端）的观星助手
* 集成 RAG、FAISS/ChromaDB、本地/云部署，保证离线可用性
* 支持多语言交互（中文、英文、日语等）
* 融合实用功能（天气、月相、星图、光污染指数）
* **新增：社交分享社区**（类小红书）：观星笔记、图片/短视频、话题与关注关系、推荐与审核

---

## 2. 用户画像

* **天文爱好者**：快速查询星象、月相、适合观测的时间地点
* **学生与教师**：课堂/科研需要实时星象数据与交互式解释
* **户外旅行者**：周末露营/旅行规划观星窗口
* **技术爱好者**：对 AI、本地 RAG、LangChain 等感兴趣的开发者
* **内容创作者**（新增）：产出观星笔记/教程，积累粉丝与影响力

---

## 3. 核心功能

### 3.1 信息检索与问答

* 自然语言提问（如“今晚悉尼能看到哪些星座？”）
* 本地 RAG 检索星象知识库（星座、行星、深空天体）
* 接入外部 API（天气、光污染、月相）

### 3.2 观测辅助工具

* 天气：云量、能见度、湿度
* 月相：精确到日
* 光污染指数：基于地理坐标
* 星图：交互式星空模拟

### 3.3 多语言支持

* MCP Server 多语言实现（Python/Node/.NET）
* 自动识别输入语言并切换回答语言

### 3.4 部署与扩展

* 本地运行：Docker / 桌面端 App
* 云端运行：AWS/GCP/Azure
* 插件化：可接入 NASA/望远镜控制等新 API

### 3.5 社区与分享（新增）

* **内容类型**：图文/短视频的观星笔记（类小红书）
* **互动**：点赞、收藏、评论、转发
* **话题**：#流星雨 #银河 #月食 等标签聚合
* **社交关系**：关注/粉丝、关注流
* **发现与推荐**：热门榜单 + 兴趣推荐（协同过滤 + 行为特征）
* **内容审核**：敏感词预检、人工复审、举报/屏蔽
* **创作者主页**：展示作品、数据面板（浏览/点赞/收藏）

---

## 4. 技术架构

* **前端**：React + Tailwind（移动端自适应），上传组件（图/视频），Feed 流与话题页
* **后端**：FastAPI（Python）主入口 + MCP Server（Python/Node/.NET）
* **数据库**：

  * MySQL：用户、内容、关系、互动、审核、观测记录
  * 向量库：FAISS/ChromaDB（本地优先，可替换 Milvus/Weaviate）
  * Redis：热点内容缓存、计数与节流
* **模型**：Ollama/DeepSeek Embedding + 可替换 LLM（OpenAI/本地）
* **推荐**：离线特征聚合（行为日志 → 用户画像），在线召回+排序（rule-based MVP → 协同过滤）
* **部署**：Docker + GitHub Actions CI/CD；对象存储（本地盘 / S3 兼容）
* **审核**：NLP 敏感检测（规则+小模型），人工后台复审

---

## 5. 需求优先级

| 优先级    | 功能                    | 描述              |
| ------ | --------------------- | --------------- |
| P0     | 天气、月相、光污染 API 查询      | 核心观测功能          |
| P0     | 本地 RAG 检索             | 离线模式核心          |
| P1     | 星图交互                  | 提升体验            |
| P1     | 多语言支持                 | 覆盖全球用户          |
| **P2** | **社区功能（分享/互动/关注/发现）** | 原 P3 上调，拉新与留存核心 |
| P2     | 插件化扩展                 | 面向开发者生态         |

---

## 6. 成功指标（KPI）

* **功能性**：观星数据 3 秒内返回
* **可用性**：≥5 种语言，语义理解准确率 ≥90%
* **性能**：本地查询延迟 < 2 秒，云端 < 1 秒
* **增长**：上线 3 个月 1000+ 活跃用户
* **社区活跃**（新增）：6 个月 DAU 中 ≥30% 产生发帖/评论/点赞任一行为；人均日停留 ≥6 分钟

---

## 7. 未来规划

* AI 图像识别：上传星空照片识别星座
* 望远镜控制：与智能望远镜联动
* 开放开发者 API：扩展 RAG 知识库与插件生态
* **商业化与运营**（新增）：品牌合作、摄影大赛、观察活动联动

---

## 8. 社区与分享设计（新增大节）

### 8.1 信息架构

* **首页 Feed**：推荐 + 关注双列流（先推荐再关注的折叠卡片，支持“只看关注”）
* **话题广场**：按天文事件聚合（如 #猎户座流星雨、#蓝山银河）
* **详情页**：图文/视频 + 评论区 + 相关话题 + 相似内容
* **创作者主页**：作品墙、数据概览；关注/粉丝列表
* **发布流程**：本地草稿 → 敏感词预检 → 成功/失败提示 → 审核状态

### 8.2 体验要点（MVP）

* 图片最多 9 张、视频 ≤ 60s；标题 40 字内，正文 1,000 字内
* 话题最多 5 个；地理位置可选
* 点赞/收藏/评论 3 大互动；转发（站内为主）

### 8.3 推荐与排序（MVP → 演进）

* **MVP**：规则+统计（近 24h 热度 = 点赞×2 + 评论×3 + 收藏×4 – 负反馈×5）
* **V2**：协同过滤（user-item 行为矩阵，召回 TopN）
* **V3**：融合内容向量（文本/图像 Embedding，语义相似召回 + 排序特征）

### 8.4 审核与风控

* 触发词/涉政涉黄/版权/隐私基本规则；阈值命中 → 人工复审
* 举报/拉黑/折叠显示；重复违规限流/禁言
* 反刷与反滥用：行为速率限制、设备指纹、点赞/评论去重、风控名单

---

## 9. 数据模型草案（MySQL）

> 够用即好，后续再细化字段与索引

* `users`：用户（id, nickname, avatar, bio, lang, created_at, status）
* `posts`：帖子（id, user_id, title, content, media_type, media_urls, location, status, created_at）
* `post_topics`：话题（id, name, desc, created_at）
* `post_topic_map`：（post_id, topic_id）
* `follows`：关注关系（follower_id, followee_id, created_at, status）
* `likes`：（id, post_id, user_id, created_at）*（唯一索引 post_id+user_id）*
* `favorites`：（id, post_id, user_id, created_at）
* `comments`：（id, post_id, user_id, content, parent_id, created_at, status）
* `moderation_queue`：（id, obj_type, obj_id, rule, score, status, created_at, reviewed_by）
* `obs_records`：观测记录（id, user_id, location, seeing, transparency, moon_phase, created_at）

**索引建议**：

* `posts(user_id, created_at)`、`likes(post_id)`、`favorites(post_id)`、`comments(post_id, created_at)`
* `follows(follower_id)`、`follows(followee_id)`；`post_topic_map(topic_id, post_id)`
* 热点榜单用 Redis ZSet 维护（分地区/话题）

---

## 10. API 草案（REST 示例）

* **内容**

  * `POST /posts` 创建帖子（含上传后返回的 media_urls）
  * `GET /posts/{id}` 帖子详情
  * `GET /feed?tab=recommend|following&cursor=...` Feed 流
  * `GET /topics/{name}/posts?cursor=...` 话题流
* **互动**

  * `POST /posts/{id}/like` / `DELETE /posts/{id}/like`
  * `POST /posts/{id}/favorite` / `DELETE /posts/{id}/favorite`
  * `POST /posts/{id}/comments`
* **关系**

  * `POST /users/{id}/follow` / `DELETE /users/{id}/follow`
  * `GET /users/{id}/followers` / `GET /users/{id}/following`
* **审核**

  * `POST /moderation/scan`（内部）
  * `POST /reports` 举报
* **观测**

  * `GET /astro/weather?lat=&lng=`
  * `GET /astro/moon?date=`
  * `GET /astro/pollution?lat=&lng=`

---

## 11. 性能与稳定性

* 图/视频：对象存储（本地 MinIO / S3），上传直传，回源鉴权
* 缓存：帖子热度榜、详情缓存 60–180s；计数用 Redis HyperLogLog/Bitmap（去重）
* 限流：IP/用户/设备多维限流；评论/点赞节流（如 30 ops/min）
* 监控：接口 P95、错误率、发布成功率、审核通过率、负反馈率

---
