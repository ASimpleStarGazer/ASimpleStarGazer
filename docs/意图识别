# 输入:
意图种类：{{args}}

# 输出:
**注意:** 
完成每一步后，都必须更新progress.md notionvc: 467e1cfc-f9fd-4c28-bbe7-e544f67a2df7
1. 开发用数据集（25）<意图种类名称>_development.json
2. 测试用数据集（75）<意图种类名称>_test.json
3. 测试用数据集 - 松散 （75）<意图种类名称>_test_loose.json

## 步骤0: 生成笔记
* 仿照例子和当前任务生成笔记 progress.md

## 步骤1: 请根据以下指令生成一个Markdown格式的“定义文件”：
1. **读取模板**: 从 `template.md` 文件中加载现有模板。
2. **生成内容**: 
    * 依据输入的**种类**（意图种类）和已加载的模板，生成Markdown内容。
    * 确保合理使用Markdown元素，包括标题（Headers）、引用块（Blockquotes）和无序列表（Bullet point lists）。
3. **保存文件**: 将生成的Markdown内容保存到 `intents/<意图种类名称>.md`。文件命名应使用 `snake_case` 格式。

## 步骤2: 检查并修正生成的Markdown文件
1. 请求用户检查生成的文件并手动修正。在提示中显式提供Markdown文件的**完整路径**
2. **完成确认**：并请求用户在完成检查和手动修正后，请回复“**完成**”以继续工作流。
**注意**：任何其他回复将中断工作流。

## 步骤3: 生成一个**松散定义文件**：
1. **读取原定义文件**: 从指定地址读取`定义文件`的内容。
2. **生成松散内容**: 根据原定义文件的Markdown内容，生成一个新的Markdown文件。新文件中的定义和示例应更具通用性和包容性，以模拟用户查询的多样性。
  * **目的**: 此文件旨在为生成更广泛的测试数据提供基础。
3. **保存文件**: 将生成的Markdown内容保存到 `intents/<意图种类名称>_loose.md`。

## 步骤4: 生成一个**开发用数据集**：
1. **读取定义文件**: 从指定地址读取`定义文件`的内容。
2. **生成数据**:
    * 根据定义文件中对意图的描述和提供的示例，生成 **25条** 符合要求（符合描述，类似示例）的用户查询数据。
    * **意图**: 每条数据中的 `intent` 字段应填写当前意图的名称。
3. **数据格式**: 生成的数据必须是JSON数组，每项包含 `id` (UUID)、`input` (生成的用户查询内容) 和 `intent` (当前意图名称)。
    ```json
    [
      { "id": "<uuid>", "input": "<生成的用户查询内容>", "intent": "<该意图名称>" }
    ]
    ```
4. **保存文件**: 将生成的JSON数据保存到 `test_data/<意图种类名称>_development.json`。

## 步骤5: 生成一个**测试用数据集**：
1. **读取定义文件**: 从指定地址读取`定义文件`的内容。
2. **生成数据**:
    * 根据定义文件中对意图的描述和提供的示例，生成 **75条** 符合要求（符合描述，类似示例）的用户查询数据。
    * **意图**: 每条数据中的 `intent` 字段应填写当前意图的名称。
3. **数据格式**: 生成的数据必须是JSON数组，每项包含 `id` (UUID)、`input` (生成的用户查询内容) 和 `intent` (当前意图名称)。
    ```json
    [
      { "id": "<uuid>", "input": "<生成的用户查询内容>", "intent": "<该意图名称>" }
    ]
    ```
4. **保存文件**: 将生成的JSON数据保存到 `test_data/<意图种类名称>_test.json`。

**注意**：此数据集与开发用数据集的生成逻辑和格式完全相同，仅数量不同。

## 步骤6: 生成一个**松散测试用数据集**：

1. **读取松散定义文件**: 从指定地址读取`松散定义文件`的内容。
2. **生成松散数据**:
    * 根据松散定义文件中对意图的描述和提供的示例，生成 **75条** 更具通用性和多样性的用户查询数据。
    * **意图**: 每条数据中的 `intent` 字段应填写当前意图的名称。
3. **数据格式**: 生成的数据必须是JSON数组，每项包含 `id` (UUID)、`input` (生成的用户查询内容) 和 `intent` (当前意图名称)。
    ```json
    [
      { "id": "<uuid>", "input": "<生成的用户查询内容（松散）>", "intent": "<该意图名称>" }
    ]
    ```
4. **保存文件**: 将生成的JSON数据保存到 `test_data/<意图种类名称>_test_loose.json`。

----
progress.md 笔记格式

## 任务
[x] xxxxx
[ ] yyyyy
[ ] zzzzz
...

## 文件生成进度
[x] one.md
[ ] two.md
[ ] three.json
...

## 当前任务
读取`定义文件`内容...
